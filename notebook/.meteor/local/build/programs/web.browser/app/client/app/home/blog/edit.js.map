{"version":3,"sources":["meteor://ðŸ’»app/client/app/home/blog/edit.js"],"names":[],"mappings":"yfile":"/client/app/home/blog/edit.js","sourcesContent":["Template.edit.onRendered(function() {\n\tSession.set('edited', false);\n\tvar post = Session.get('editing'),\n\t\tdata = Template.currentData() || undefined,\n\t\tcontent = document.querySelector('.content textarea');\n\n\tcontent.style.height = content.scrollHeight + 'px';\n\n\tif ( data._id ) {\n\t\tvar fields = document.getElementsByTagName('pre'),\n\t\t\tfield,\n\t\t\tprettyDate = Meteor.utils.prettifyDate(new Date(data.published));\n\n\t\tfor ( var i = 0, len = fields.length; i !== len; i++ ) {\n\t\t\tfield = fields[i].getAttribute('data-name');\n\n\t\t\tif ( field === 'published-date' ) {\n\t\t\t\tfields[i].textContent = prettyDate[1];\n\t\t\t} else if ( field === 'published-time' ) {\n\t\t\t\tfields[i].textContent = prettyDate[2];\n\t\t\t} else {\n\t\t\t\tfields[i].textContent = data[field];\n\t\t\t}\n\t\t}\n\t}\n});\n\nTemplate.edit.helpers({\n\tnewPost: function() {\n\t\treturn !this._id ? true : false;\n\t},\n\tedited: function() {\n\t\treturn Session.get('edited');\n\t}\n});\n\nTemplate.edit.events({\n\t'click .cancel': function(e) {\n\t\te.preventDefault();\n\t\tif ( Session.get('editing') === true ) {\n\t\t\tFlowRouter.go('/blog');\n\t\t}\n\t\tSession.set('editing', false);\n\t},\n\t'blur pre, blur textarea': function(e) {\n\t\tvar post = Template.currentData() || undefined,\n\t\t\t// fields = document.querySelectorAll('.edit-post form pre'),\n\t\t\tfield = e.target,\n\t\t\tinput;\n\n\t\tif ( field.tagName.toLowerCase() === 'pre' ) {\n\t\t\tinput = Meteor.utils.smartenQuotes(field.textContent.trim());\n\t\t\tif ( input ) { \n\t\t\t\tfield.textContent = input;\n\t\t\t}\n\t\t} else {\n\t\t\t// input = Meteor.utils.smartenQuotes(field.value.trim());\n\t\t\tinput = field.textContent.trim();\n\t\t\tif ( input ) { \n\t\t\t\tfield.value = input;\n\t\t\t}\n\t\t}\n\t},\n\t'keypress pre': function(e) {\n\t\tvar field = e.target.getAttribute('data-name');\n\n\t\tif ( field === 'title' || field === 'published-date' || field === 'published-time' ) {\n\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tSession.set('edited', false);\n\t\t\t} else {\n\t\t\t\tSession.set('edited', true);\n\t\t\t}\n\t\t} else {\n\t\t\tSession.set('edited', true);\n\t\t}\n\t},\n\t'onchange textarea, keyup textarea': function(e) {\n\t\tinput = e.target.value;\n\n\t\tif ( !input ) {\n\t\t\te.target.style.height = '2.5em';\n\t\t} else {\n\t\t\te.target.style.height = e.target.scrollHeight + 'px';\n\t\t}\n\t},\n\t'click .add-tag, keydown input.tags': function(e) {\n\t\tvar field = e.target.value ? e.target : document.querySelector('input.tags'),\n\t\t\tinput = field.value;\n\n\t\tif ( e.keyCode === 13 || e.target.tagName === 'A' ) {\n\t\t\te.preventDefault();\n\n\t\t\tif ( input ) {\n\t\t\t\tMeteor.call('addTag', this._id, input);\n\t\t\t}\n\n\t\t\tfield.value = '';\n\t\t}\n\t},\n\t'click .remove-tag': function(e) {\n\t\te.preventDefault();\n\n\t\tvar doc = Template.currentData();\n\n\t\tMeteor.call('removeTag', doc._id, this.valueOf());\n\t},\n\t'submit .edit-post': function(e) {\n\t\te.preventDefault();\n\n\t\t// gather all the user input\n\t\tvar title = document.querySelector('h1 pre'),\n\t\t\tpublished = document.querySelectorAll('h2 pre'),\n\t\t\tcontent = e.target.content,\n\t\t\ttags = e.target.tags,\n\t\t\texcerpt = document.querySelector('h3 pre'),\n\t\t\tslug = e.target.slug,\n\t\t\ttagArr,\n\t\t\tpost = this._id ? this : { _id: 'new' },\n\t\t\t// get a date number from the entered date and time, if any\n\t\t\tdate = Meteor.utils.getUTC(published[0].textContent.trim(), published[1].textContent.trim()),\n\t\t\tstatus = e.target.visibility,\n\t\t\tinput = {\n\t\t\t\ttitle: title.textContent.trim(),\n\t\t\t\tcontent: content.value.trim(),\n\t\t\t\tstatus: status.value\n\t\t\t};\n\n\t\tif ( date ) {\n\t\t\tinput.published = date;\n\t\t} else {\n\t\t\tif ( post._id === 'new' ) {\n\t\t\t\tinput.published = Date.now();\n\t\t\t}\n\t\t}\n\n\t\tif ( tags.value ) {\n\t\t\ttagArr = tags.value.split('\\n');\n\t\t\tinput.tags = tagArr;\n\t\t}\n\n\t\tif ( excerpt.textContent ) {\n\t\t\tinput.excerpt = excerpt.textContent.trim();\n\t\t}\n\n\t\tif ( slug.value ) {\n\t\t\tif ( slug.value !== post.slug ) {\n\t\t\t\tinput.slug = slug.value.trim();\n\t\t\t}\n\t\t}\n\n\t\tif ( input.title && input.content ) {\n\t\t\tMeteor.call('editPost', post._id, input, function(err, response) {\n\t\t\t\tif ( err ) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t} else {\n\t\t\t\t\tSession.set('editing', false);\n\t\t\t\t\tif ( input.slug || post._id === 'new' ) {\n\t\t\t\t\t\tFlowRouter.go('/blog/');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tMeteor.utils.appendMessages(e.target, '<p><i class=\"fa fa-exclamation-circle\"></i> Title and content are required.</p>');\n\t\t}\n\t}\n});"]}