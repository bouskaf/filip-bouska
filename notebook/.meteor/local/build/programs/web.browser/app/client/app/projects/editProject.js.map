{"version":3,"sources":["meteor://ðŸ’»app/client/app/projects/editProject.js"],"names":[],"mappings":"yfile":"/client/app/projects/editProject.js","sourcesContent":["Template.editProject.onRendered(function() {\n\tvar data = Template.currentData() || undefined,\n\t\tcontent = document.querySelector('.content');\n\n\tcontent.style.height = content.scrollHeight + 'px';\n\n\tif ( !data ) {\n\t\tdata = {\n\t\t\t_id: false\n\t\t};\n\t}\n\n\tif ( data._id ) {\n\t\tvar fields = document.getElementsByTagName('pre'),\n\t\t\tfield,\n\t\t\tprettyDate = Meteor.utils.prettifyDate(new Date(data.published));\n\n\t\tfor ( var i = 0, len = fields.length; i !== len; i++ ) {\n\t\t\tfield = fields[i].getAttribute('data-name');\n\n\t\t\tif ( field === 'published-date' ) {\n\t\t\t\tfields[i].textContent = prettyDate[1];\n\t\t\t} else if ( field === 'published-time' ) {\n\t\t\t\tfields[i].textContent = prettyDate[2];\n\t\t\t} else {\n\t\t\t\tfields[i].textContent = data[field];\n\t\t\t}\n\t\t}\n\t}\n});\n\nTemplate.editProject.helpers({\n\tnewProject: function() {\n\t\treturn !this._id ? true : false;\n\t},\n\tprojectTitle: function() {\n\t\tvar title = this.title || '',\n\t\t\tHTML = '<pre contentEditable class=\"title\" data-name=\"title\" data-placeholder=\"Project Title\">' + title + '</pre>';\n\n\t\treturn HTML;\n\t}\n});\n\nTemplate.editProject.events({\n\t'click .save': function(e) {\n\t\tSession.set('editingProject', false);\n\t\t// if ( !this._id ) {\n\t\t// \tFlowRouter.go('/projects');\n\t\t// }\n\t},\n\t'click .cancel': function(e) {\n\t\te.preventDefault();\n\t\tSession.set('editingProject', false);\n\t\tif ( !this._id ) {\n\t\t\tSession.set('viewingProject', false);\n\t\t\tFlowRouter.go('/projects');\n\t\t}\n\t},\n\t'onchange textarea, keyup textarea': function(e) {\n\t\tinput = e.target.value;\n\n\t\tif ( !input ) {\n\t\t\te.target.style.height = '2.5em';\n\t\t} else {\n\t\t\te.target.style.height = e.target.scrollHeight + 'px';\n\t\t}\n\t},\n\t'click .add-image, keydown input.image': function(e) {\n\t\tvar field = e.target.value ? e.target : document.querySelector('input.image'),\n\t\t\tinput = field.value;\n\n\t\tif ( e.keyCode === 13 || e.target.tagName === 'A' ) {\n\t\t\te.preventDefault();\n\n\t\t\tif ( input ) {\n\t\t\t\tMeteor.call('addImage', this._id, input);\n\t\t\t}\n\n\t\t\tfield.value = '';\n\t\t}\n\t},\n\t'click figure img': function(e) {\n\t\te.preventDefault();\n\n\t\tvar doc = Template.currentData();\n\n\t\tMeteor.call('removeImg', doc._id, this.valueOf());\n\t},\n\t'submit .edit-project': function(e) {\n\t\te.preventDefault();\n\n\t\t// gather all the user input\n\t\tvar title = document.querySelector('h1 pre'),\n\t\t\tpublished = document.querySelectorAll('h2 pre'),\n\t\t\tcontent = e.target.content,\n\t\t\timages = e.target.images,\n\t\t\t// excerpt = document.querySelector('h3 pre'),\n\t\t\tslug = e.target.slug,\n\t\t\timgArr,\n\t\t\tthumb = e.target.thumb,\n\t\t\tproject = this._id ? this : { _id: 'new' },\n\t\t\t// get a date number from the entered date and time, if any\n\t\t\tdate = Meteor.utils.getUTC(published[0].textContent.trim(), published[1].textContent.trim()),\n\t\t\tstatus = e.target.visibility,\n\t\t\tinput = {\n\t\t\t\ttitle: title.textContent.trim(),\n\t\t\t\tcontent: content.value.trim(),\n\t\t\t\tstatus: status.value\n\t\t\t};\n\n\t\tif ( date ) {\n\t\t\tinput.published = date;\n\t\t} else {\n\t\t\tif ( project._id === 'new' ) {\n\t\t\t\tinput.published = Date.now();\n\t\t\t}\n\t\t}\n\n\t\tif ( images ) {\n\t\t\tif ( images.value ) {\n\t\t\t\timgArr = images.value.split('\\n');\n\t\t\t\tinput.images = imgArr;\n\t\t\t}\n\t\t}\n\n\t\tif ( thumb.value ) {\n\t\t\tinput.thumb = thumb.value;\n\t\t}\n\n\t\tif ( slug.value ) {\n\t\t\tif ( slug.value !== project.slug ) {\n\t\t\t\tinput.slug = slug.value.trim();\n\t\t\t}\n\t\t}\n\n\t\tif ( input.title && input.content ) {\n\t\t\tMeteor.call('editProject', project._id, input, function(err, response) {\n\t\t\t\tif ( err ) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t} else {\n\t\t\t\t\tSession.set('editing', false);\n\t\t\t\t\tif ( input.slug || project._id === 'new' ) {\n\t\t\t\t\t\tFlowRouter.go('/projects/');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tMeteor.utils.appendMessages(e.target, '<p><i class=\"fa fa-exclamation-circle\"></i> Title and content are required.</p>');\n\t\t}\n\t}\n});"]}