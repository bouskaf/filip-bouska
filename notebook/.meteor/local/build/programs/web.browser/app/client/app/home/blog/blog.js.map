{"version":3,"sources":["meteor://ðŸ’»app/client/app/home/blog/blog.js"],"names":[],"mappings":"yfile":"/client/app/home/blog/blog.js","sourcesContent":["Template.blog.onRendered(function() {\n\t// reset 'now' variable every minute, so that new posts appear automatically\n\tMeteor.setInterval(function() {\n\t\tSession.set('now', Date.now());\n\t}, 60000);\n});\n\nTemplate.blog.helpers({\n\tsinglePost: function() {\n\t\tvar postId = this._id || Session.get('editing') || Session.get('singlePost');\n\n\t\treturn postId ? true : false;\n\t},\n\tposts: function() {\n\t\tvar filter = {},\n\t\t\tsearch = Session.get('filter') || '',\n\t\t\tlimit = Session.get('subLimit') || 10,\n\t\t\tnow = Session.get('now') || Date.now(),\n\t\t\toptions = Session.get('subOptions') || {\n\t\t\t\tlimit: limit,\n\t\t\t\tsort: { published: -1 }\n\t\t\t},\n\t\t\tresults;\n\n\t\t// if not logged in, limit visible posts\n\t\tif ( !Meteor.user() ) {\n\t\t\tfilter.status = 'public';\n\t\t\tfilter.published = { $lte: now };\n\t\t}\n\n\t\tSession.set('loading', true);\n\t\t// setup the subscription\n\t\tMeteor.subscribe('posts', filter, options, search, function(err, response) {\n\t\t\tif ( err ) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tSession.set('loading', false);\n\t\tresults = Posts.find( filter, options );\n\t\treturn results.count() ? results : false;\n\t},\n\texcerpt: function() {\n\t\treturn Meteor.utils.excerpt(this);\n\t},\n\tmore: function() {\n\t\tvar limit = Session.get('subLimit') || 10,\n\t\t\tcount = Posts.find().count();\n\n\t\t// bug: if the total number of posts is a multiple of 10, the 'more' button will always be visible\n\t\tif ( count < limit ) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\tsearching: function() {\n\t\treturn Session.get('searching');\n\t}\n});\n\nTemplate.blog.events({\n\t'click .logout': function(e) {\n\t\tMeteor.logout();\n\t},\n\t'click .more': function(e) {\n\t\tvar limit = Session.get('subLimit') || 10;\n\n\t\tSession.set('subLimit', limit + 10);\n\t},\n\t// infinite scroll\n\t'scroll .posts': function(e) {\n\t\tif ( window.innerHeight + e.target.scrollTop >= e.target.scrollHeight - 50 ) {\n\t\t\tvar limit = Session.get('subLimit') || 10;\n\t\t\tSession.set('subLimit', limit + 10);\n\t\t}\n\t},\n\t'click a.search': function(e) {\n\t\te.preventDefault();\n\n\t\tif ( Session.get('searching') ) {\n\t\t\tSession.set('searching', false);\n\t\t\tSession.set('filter', '');\n\t\t\tFlowRouter.go('/blog');\n\t\t} else {\n\t\t\tSession.set('searching', true);\n\t\t}\n\t},\n\t// hack to fix broken overflow scrolling in iOS\n\t'touchstart div.posts, touchstart div.single': function(e) {\n\t\tif ( e.currentTarget.scrollTop === 0 ) {\n\t\t\te.currentTarget.scrollTop = 1;\n\t\t}\n\t\tif (e.currentTarget.scrollTop === e.currentTarget.scrollHeight - e.currentTarget.clientHeight) {\n\t\t\te.currentTarget.scrollTop = e.currentTarget.scrollHeight - e.currentTarget.clientHeight - 1;\n\t\t}\n\t\te.stopPropagation();\n\t},\n\t'click .delete': function(e) {\n\t\te.preventDefault();\n\t\tMeteor.call('deletePost', this._id);\n\t\tvar blog = document.querySelector('section.blog');\n\n\t\tblog.classList.remove('post');\n\t}\n});"]}