{"version":3,"sources":["meteor://ðŸ’»app/client/app/admin/admin.js"],"names":[],"mappings":"yfile":"/client/app/admin/admin.js","sourcesContent":["// pass activation token to Session when a new user clicks the enrollment link\nAccounts.onResetPasswordLink(function (token, done) {\n\tSession.set('resetToken', token);\n});\n\n\nTemplate.admin.helpers({\n\treset: function() {\n\t\treturn Session.get('reset');\n\t},\n\tresetting: function(t) {\n\t\tif (Accounts._resetPasswordToken) {\n\t\t\tSession.set('resetToken', Accounts._resetPasswordToken);\n\t\t}\n\n\t\treturn Session.get('resetToken');\n\t}\n});\n\nTemplate.admin.events({\n\t'click .signup': function(e) {\n\t\te.preventDefault();\n\t\tFlowRouter.go('/register');\n\t},\n\t'click .reset': function(e) {\n\t\te.preventDefault();\n\t\tSession.set('reset', true);\n\t},\n\t'click .cancel': function(e) {\n\t\te.preventDefault();\n\t\tSession.set('reset', false);\n\t},\n\t'submit #start-reset': function(e) {\n\t\te.preventDefault();\n\n\t\tvar email = e.target.email.value.trim().toLowerCase(),\n\t\t\terrors = '';\n\n\t\tif ( !email ) {\n\t\t\terrors += '<p>' + errIcon + 'Please enter your account e-mail address.</p>';\n\t\t}\n\t\tif ( email.indexOf('@') === -1 || // email address must contain @\n\t\t\temail.indexOf('.') === -1 // email address must contain .\n\t\t) {\n\t\t\terrors += '<p>' + errIcon + 'Please enter a valid e-mail address.</p>';\n\t\t}\n\t\tif ( errors ) {\n\t\t\tMeteor.utils.appendMessages(e.target, errors);\n\t\t} else {\n\t\t\tSession.set('loading', true);\n\t\t\tAccounts.forgotPassword({email: email}, function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tMeteor.utils.appendMessages(e.target, err.reason);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMeteor.utils.appendMessages(e.target, '<p>Recovery e-mail sent!</p>');\n\t\t\t\t}\n\t\t\t\tSession.set('loading', false);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\n\t},\n\t'submit #login': function(e) {\n\t\te.preventDefault();\n\n\t\tvar user = {\n\t\t\t\tname: e.target.user.value.trim().toLowerCase(),\n\t\t\t\tpassword: e.target.password.value\n\t\t\t},\n\t\t\terrors = '';\n\n\t\t// validate email and password\n\t\tif ( !user.name || !user.password ) { // if there's no email/password or the email doesn't contain an @ character\n\t\t\tif ( !user.name ) {\n\t\t\t\terrors += '<p>' + errIcon + 'Please enter your username.</p>';\n\t\t\t}\n\t\t\tif ( !user.password ) {\n\t\t\t\terrors += '<p>' + errIcon + 'Please enter your password.</p>';\n\t\t\t}\n\t\t\tif ( errors ) {\n\t\t\t\tMeteor.utils.appendMessages(e.target, errors);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tSession.set('loading', true);\n\t\t\t// if inputs pass validation, attempt to log in with the given email and password\n\t\t\tMeteor.loginWithPassword(user.name, user.password, function(err){\n\t\t\t\t// handle callback errors\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tMeteor.utils.appendMessages(e.target, err.reason);\n\t\t\t\t} else {\n\t\t\t\t\t// successful login\n\t\t\t\t\tconsole.log('logging in');\n\t\t\t\t\tFlowRouter.go('/blog');\n\t\t\t\t}\n\t\t\t\tSession.set('loading', false);\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t},\n\t'submit #reset': function(e) {\n\t\te.preventDefault();\n\t\tvar token = Session.get('resetToken'),\n\t\t\terrIcon = '<i class=\"fa fa-exclamation-circle\"></i>',\n\t\t\tpassword = e.target.password.value,\n\t\t\tconfirm = e.target.confirm.value,\n\t\t\terror = '';\n\n\t\t// validate password fields\n\t\tif ( password.length < 6 ) {\n\t\t\terror += password ? '<p>' + errIcon + 'Password must be at least 6 characters.</p>' : '<p>' + errIcon + 'Please enter a password.</p>';\n\t\t}\n\t\tif ( password !== confirm ) {\n\t\t\terror += '<p>' + errIcon + 'Password fields do not match!</p>';\n\t\t}\n\t\tif ( error ) {\n\t\t\tMeteor.utils.appendMessages(e.target, error);\n\t\t} else {\n\t\t\tSession.set('loading', true);\n\t\t\tAccounts.resetPassword(token, password, function(err) {\n\t\t\t\tif ( err ) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tMeteor.utils.appendMessages(e.target, err.reason);\n\t\t\t\t} else {\n\t\t\t\t\t// unset Session registration keys\n\t\t\t\t\tSession.set('resetToken', undefined);\n\t\t\t\t\tSession.set('resetting', false);\n\n\t\t\t\t\t// log in with the given password\n\t\t\t\t\tSession.set('loading', true);\n\t\t\t\t\tMeteor.loginWithPassword(Meteor.user().username, password);\n\t\t\t\t}\n\t\t\t\tSession.set('loading', false);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n});"]}