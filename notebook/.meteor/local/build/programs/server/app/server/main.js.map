{"version":3,"sources":["meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/main.js","sourcesContent":["// update current time every minute\nMeteor.startup(function() {\n\tMeteor.setInterval(function() {\n\t\tMeteor.now = Date.now();\n\t}, 60000);\n});\n\nMeteor.publish('posts', function (filter, options, search) {\n\tcheck(filter, Object);\n\tcheck(options, Object);\n\tcheck(search, String);\n\n\tif ( options.limit ) {\n\t\tif ( options.limit > Posts.find().count ) {\n\t\t\toptions.limit = 0;\n\t\t}\n\t}\n\n\t// double-check user status before publishing private documents\n\tif ( !Meteor.dkoo.checkUser(this.userId) ) {\n\t\tif ( !filter.status ) { \n\t\t\tfilter.status = 'public';\n\t\t}\n\n\t\tif ( !filter.published ) { \n\t\t\tfilter.published = { $lte: Meteor.now };\n\t\t}\n\t}\n\n\tif ( search ) {\n\t\t// simple sanitization to strip any tag-like strings\n\t\tsearch = search.replace(/<(?:.|\\n)*?>/gm, '');\n\n\t\tfilter['$or'] = [\n\t\t\t{ title: { $regex: new RegExp('(?=.*' + search + ').*', 'i') } },\n\t\t\t{ content: { $regex: new RegExp('(?=.*' + search + ').*' + '.*', 'i') } },\n\t\t\t{ excerpt: { $regex: new RegExp('(?=.*' + search + ').*' + '.*', 'i') } },\n\t\t\t{ tags: { $regex: new RegExp('(?=.*' + search + ').*' + '.*', 'i') } },\n\t\t\t{ published: { $gte: Date.parse(search), $lte: Date.parse(search) + 86400000 } } // date queries should find all posts within a 24-hour period\n\t\t];\n\t}\n\n\treturn Posts.find( filter, options );\n});\n\nMeteor.publish('projects', function () {\n\tvar filter = {};\n\n\t// double-check user status before publishing private documents\n\tif ( !Meteor.dkoo.checkUser(this.userId) ) {\n\t\tfilter.status = 'public';\n\t}\n\n\treturn Projects.find( filter );\n});"]}