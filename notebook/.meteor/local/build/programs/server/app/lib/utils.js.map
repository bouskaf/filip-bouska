{"version":3,"sources":["meteor://ðŸ’»app/lib/utils.js"],"names":[],"mappings":"yfile":"/lib/utils.js","sourcesContent":["Meteor.utils = {\n\t// append messages for admin screens\n\tappendMessages: function(parent, HTML) {\n\t\tvar messages = document.getElementById('messages') || document.createElement('div');\n\t\tmessages.setAttribute('id', 'messages');\n\t\tmessages.innerHTML = HTML;\n\t\tparent.appendChild(messages);\n\t},\n\tprettifyDate: function(dateString) {\n\t\tvar days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n\n\t\t// Create an array with the current month, day and time\n\t\tvar date = [ dateString.getMonth() + 1, dateString.getDate(), dateString.getFullYear() ];\n\n\t\t// Create an array with the current hour, minute and second\n\t\tvar time = [ dateString.getHours(), dateString.getMinutes() ];\n\n\t\t// Determine AM or PM suffix based on the hour\n\t\tvar suffix = ( time[0] < 12 ) ? 'AM' : 'PM';\n\n\t\t// Convert hour from military time\n\t\ttime[0] = ( time[0] < 12 ) ? time[0] : time[0] - 12;\n\n\t\t// If hour is 0, set it to 12\n\t\ttime[0] = time[0] || 12;\n\n\t\t// If seconds and minutes are less than 10, add a zero\n\t\tfor ( var i = 1; i < 3; i++ ) {\n\t\t\tif ( time[i] < 10 ) {\n\t\t\t\ttime[i] = '0' + time[i];\n\t\t\t}\n\t\t}\n\n\t\treturn [days[dateString.getDay()], date.join('/'), time.join(':') + ' ' + suffix];\n\t},\n\tgetUTC: function(prettifiedDate, prettifiedTime) {\n\t\tvar date = prettifiedDate.split('/'),\n\t\t\ttimeStr = prettifiedTime.toLowerCase() || '12:00 am',\n\t\t\ttime = timeStr.match(/(\\d+)(?::(\\d\\d))?\\s*(p?)/i),\n\t\t\tnewDate;\n\n\t\t// attempt to parse the date and time strings. expected formats:\n\t\t// date: MM/DD/YYYY\n\t\t// time: 9am, 9:00AM, 9:00 am will all work\n\t\t// if date is not given, return false\n\t\t// if time is not given, set it to midnight\n\t\tif ( date.length === 3 && time ) {\n\t\t\tvar hour = parseInt(time[1], 10) || 12,\n\t\t\t\tminute = parseInt(time[2]) || 0;\n\n\t\t\tif ( hour == 12 && !time[3] ) {\n\t\t\t\thour = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thour += (hour < 12 && time[3]) ? 12 : 0;\n\t\t\t}\n\n\t\t\tnewDate = new Date(parseInt(date[2]), parseInt(date[0]) - 1, parseInt(date[1]), hour, minute);\n\t\t\treturn newDate.getTime();\n\t\t} else {\n\t\t\t// if we can't parse the date and time, return false\n\t\t\treturn false;\n\t\t}\n\t},\n\tmakeSlug: function(title) {\n\t\tvar arr = title.split(' '),\n\t\t\tslug = [],\n\t\t\tnewSlug,\n\t\t\texisting;\n\n\t\tfor ( var i = 0, len = arr.length; i !== len; i++ ) {\n\t\t\tif ( arr[i] ) {\n\t\t\t\t// remove punctuation, make all words lowercase, join with hyphens\n\t\t\t\tslug.push(arr[i].replace(/[^\\w\\s-]|_/g, '').replace(/\\s+/g, ' ').toLowerCase());\n\t\t\t}\n\t\t}\n\n\t\tnewSlug = slug.join('-').replace('--', '-');\n\n\t\texisting = Posts.find( { slug: newSlug } );\n\n\t\t// if there's already one or more posts with this slug, increment the slug\n\t\tif ( existing.count() ) {\n\t\t\tnewSlug += '-' + ( existing.count() + 1 );\n\t\t}\n\n\t\treturn newSlug;\n\t},\n\texcerpt: function(post) {\n\t\tif ( post.excerpt ) {\n\t\t\treturn post.excerpt;\n\t\t} else {\n\t\t\tvar array = post.content.split(' '),\n\t\t\t\texcerpt = array.slice(0, 25).join(' ') + '&#160;&#8230;';\n\n\t\t\treturn array.length >= 25 ? excerpt : post.content;\n\t\t}\n\t},\n\tsmartenQuotes: function(text) {\n\t\treturn text\n\t\t\t.replace(/'''/g, '\\u2034')\t\t\t\t\t\t\t\t\t\t\t\t\t// triple prime\n\t\t\t.replace(/(\\W|^)\"(\\S)/g, '$1\\u201c$2')\t\t\t\t\t\t\t\t\t\t// beginning \"\n\t\t\t.replace(/(\\u201c[^\"]*)\"([^\"]*$|[^\\u201c\"]*\\u201c)/g, '$1\\u201d$2')\t\t\t// ending \"\n\t\t\t.replace(/([^0-9])\"/g,'$1\\u201d')\t\t\t\t\t\t\t\t\t\t\t// remaining \" at end of word\n\t\t\t.replace(/''/g, '\\u2033')\t\t\t\t\t\t\t\t\t\t\t\t\t// double prime\n\t\t\t.replace(/(\\W|^)'(\\S)/g, '$1\\u2018$2')\t\t\t\t\t\t\t\t\t\t// beginning '\n\t\t\t.replace(/([a-z])'([a-z])/ig, '$1\\u2019$2')\t\t\t\t\t\t\t\t\t// conjunction's possession\n\t\t\t.replace(/((\\u2018[^']*)|[a-z])'([^0-9]|$)/ig, '$1\\u2019$3')\t\t\t\t// ending '\n\t\t\t.replace(/(\\u2018)([0-9]{2}[^\\u2019]*)(\\u2018([^0-9]|$)|$|\\u2019[a-z])/ig, '\\u2019$2$3')\t// abbrev. years like '93\n\t\t\t.replace(/(\\B|^)\\u2018(?=([^\\u2019]*\\u2019\\b)*([^\\u2019\\u2018]*\\W[\\u2019\\u2018]\\b|[^\\u2019\\u2018]*$))/ig, '$1\\u2019')\t// backwards apostrophe\n\t\t\t.replace(/'/g, '\\u2032');\n\t}\n}"]}